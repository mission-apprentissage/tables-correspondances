version: "2.4"
services:
  reverse_proxy:
    image: tables_correspondances_reverse_proxy
    container_name: tables_correspondances_reverse_proxy
    build:
      context: reverse_proxy
    mem_limit: 256m
    restart: unless-stopped
    ports:
      - 80:80
    networks:
      - tables_correspondances_network
    depends_on:
      - server
      - ui

  ui:
    image: tables_correspondances_ui
    container_name: tables_correspondances_ui
    build:
      context: ui
    mem_limit: 256m
    networks:
      - tables_correspondances_network
    depends_on:
      - server

  server:
    image: tables_correspondances_server
    container_name: tables_correspondances_server
    build:
      context: server
    mem_limit: 1g
    restart: unless-stopped
    networks:
      - tables_correspondances_network
    depends_on:
      - mongodb
    environment:
      - TABLES_CORRESPONDANCES_MONGODB_URI=mongodb://mongodb:27017/tables-correspondances?retryWrites=true&w=majority
      - TABLES_CORRESPONDANCES_ELASTICSEARCH_NODE=http://elasticsearch:9200

  mongodb:
    image: mongo:4.2.6-bionic
    container_name: tables_correspondances_mongodb
    mem_limit: 1g
    restart: unless-stopped
    networks:
      - tables_correspondances_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.1.1
    container_name: tables_correspondances_elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - cluster.name=docker-cluster
      - discovery.type=single-node
    mem_limit: 1g
    networks:
      - tables_correspondances_network

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.1.1
    container_name: tables_correspondances_kibana
    depends_on:
      - elasticsearch
    networks:
      - tables_correspondances_network
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

networks:
  tables_correspondances_network:
    name: tables_correspondances_network
